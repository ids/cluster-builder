---
- name: install Dashboard Helm Repo
  shell: /usr/local/bin/helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/

- name: install Metrics Server Helm Repo
  shell: /usr/local/bin/helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/

- name: install Kubernetes Dashboard
  shell: "/usr/local/bin/helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard --set=resources.limits.cpu=200m,metricsScraper.enabled=true"

- name: install Metrics Server
  shell: "/usr/local/bin/helm upgrade --install metrics-server metrics-server/metrics-server --namespace kubernetes-dashboard --set=args={--kubelet-insecure-tls=true}" 

- name: generate the dashboard user & role binding manifest
  template:
    src: templates/dashboard-user.j2
    dest: "{{ target_dest_folder }}/dashboard-user.yml"

- name: create dashboard admin user
  shell: "kubectl apply -f {{ target_dest_folder }}/dashboard-user.yml"

- name: generate secret token
  shell: kubectl -n kube-system create token admin-user

- name: store secret token in file
  shell: kubectl get secret admin-user -n kube-system -o jsonpath={".data.token"} | base64 -d > {{ target_dest_folder }}/dashboard_token

- name: fetch the dashboard authentication token
  fetch:
    src: "{{ target_dest_folder }}/dashboard_token"
    dest: "{{ playbook_dir | replace('/ansible', '') }}/clusters/{{ cluster_pkg_folder }}/"
    flat: yes     

- name: generate the dashboard proxy script
  template:
    src: templates/dashboard-proxy.j2
    dest: "{{ playbook_dir | replace('/ansible', '') }}/clusters/{{ cluster_pkg_folder }}/dashboard-proxy.sh"
  run_once: true
  delegate_to: 127.0.0.1

- name: generate the dashboard get token script
  template:
    src: templates/dashboard-token.j2
    dest: "{{ playbook_dir | replace('/ansible', '') }}/clusters/{{ cluster_pkg_folder }}/dashboard-token.sh"
  run_once: true
  delegate_to: 127.0.0.1
