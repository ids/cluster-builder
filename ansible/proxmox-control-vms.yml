---
- hosts: k8s_masters:k8s_workers
  remote_user: root
  gather_facts: false
  tasks:  

  - name: start the VMs
    local_action:
      module: shell
      _raw_params: > 
        ssh -o LogLevel=Error -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ proxmox_user }}@{{ proxmox_host }} 
        qm start {{ vmid.stdout }}
    when: vmid.stdout is defined and vm_action == 'start'
    register: result
    until: result.rc is defined and result.rc == 0

  - name: stop the VMs
    local_action:
      module: shell
      _raw_params: > 
        ssh -o LogLevel=Error -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ proxmox_user }}@{{ proxmox_host }} 
        qm shutdown {{ vmid.stdout }}
    when: vmid.stdout is defined and vm_action == 'stop'
    register: result
    until: result.rc is defined and result.rc == 0

  - name: suspend the VMs
    local_action:
      module: shell
      _raw_params: > 
        ssh -o LogLevel=Error -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ proxmox_user }}@{{ proxmox_host }} 
        qm suspend {{ vmid.stdout}}
    when: vmid.stdout is defined and vm_action == 'suspend'

  - name: kill the VMs 
    local_action:
      module: shell
      _raw_params: > 
        ssh -o LogLevel=Error -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ proxmox_user }}@{{ proxmox_host }} 
        qm stop {{ vmid.stdout }}
    ignore_errors: true
    when: vmid.stdout is defined and vm_action == 'destroy'
  
  - name: destroy the VMs 
    local_action:
      module: shell
      _raw_params: > 
        ssh -o LogLevel=Error -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ proxmox_user }}@{{ proxmox_host }} 
        qm destroy {{ vmid.stdout }}
    when: vmid.stdout is defined and vm_action == 'destroy'

