#!/bin/bash 

INVENTORY_FILE=$1
TARGET_USER=$2
TARGET_PASSWORD_HASH=$3
export ANSIBLE_DISPLAY_SKIPPED_HOSTS=false
export ANSIBLE_CONFIG=./ansible.cfg

if [ -z INVENTORY_FILE ]; then
  read -s "Enter the target cluster folder: " INVENTORY_FILE
  echo
fi

INVENTORY_FILE=./clusters/$INVENTORY_FILE/hosts

if [ ! -f $INVENTORY_FILE ]; then
  echo
  echo "Unable to find inventory file @: ${INVENTORY_FILE}"
  exit 1
fi

REMOTE_USER=`sed -n '/^remote_user=/ {s///p;q;}' $INVENTORY_FILE | tr -d '\n' | tr -d '\r'`
if [ -z $REMOTE_USER ]; then 
  REMOTE_USER=admin
fi 

if [ -z $TARGET_USER ]; then 
  read -p "Enter user: " TARGET_USER
fi 

if [ -z $TARGET_PASSWORD_HASH ]; then 
  echo "Verifying passlib is installed (you may be prompted for a SUDO password)..."
  sudo -H pip3 install passlib

  echo
  read -s -p "Enter NEW ${TARGET_USER} password: " NEW_PASSWORD
  echo
  read -s -p "Confirm NEW ${TARGET_USER} password: " CONFIRM_PASSWORD
  echo

  if [ "$NEW_PASSWORD" != "$CONFIRM_PASSWORD" ]; then
    echo
    echo "** Passwords do not match!  Unable to update password."
    echo
    exit 1
  else
    PYTHON_CMD="from passlib.hash import sha512_crypt; print(sha512_crypt.hash('${NEW_PASSWORD}'))"
    TARGET_PASSWORD_HASH=`python3 -c "${PYTHON_CMD}"`
  fi 
fi

echo "Changing cluster password for ${TARGET_USER}..."
ansible-playbook -i $INVENTORY_FILE ansible/change-password.yml -u $REMOTE_USER --extra-vars="remote_user=${REMOTE_USER} target_user=${TARGET_USER} target_password_hash='${TARGET_PASSWORD_HASH}'"

